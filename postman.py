def harry(matrix: list):
    """
    Функция высчитывает и возвращает максимальное количество писем, которое может подобрать почтальон.
    Почтальон может двигаться только вправо либо вниз. Применяется метод динамического программирования.
    :param matrix: матрица n на m, значения - количества писем, которые можно подобрать в каждой конкретной точке.
    :return: значение правого нижнего угла матрицы (максимальное количество писем)
    """
    if not matrix[0]:  # если матрица пуста
        return -1
    if len(matrix) == 1:  # если у матрицы только одна строка
        return sum(matrix[0])
    n = len(matrix)  # количество строк
    m = len(matrix[0])  # количество столбцов
    result = [[0] * m for _ in range(n)]  # создаём новую матрицу размерностью аналогичной matrix, заполняем её нулями
    result[0][0] = matrix[0][0]
    for k in range(1, m):  # заполняем нулевую строку новой матрицы
        result[0][k] = matrix[0][k] + result[0][k - 1]
    for x in range(1, n):  # заполняем нулевой столбец новой матрицы
        result[x][0] = matrix[x][0] + result[x - 1][0]
    for i in range(1, n):  # заполняем новую матрицу до конца по принципу динамического программирования
        for j in range(1, m):
            result[i][j] = matrix[i][j] + max(result[i][j - 1], result[i - 1][j])
    return result[-1][-1]


print(harry([[]]))
print(harry([[5, 2], [5, 2]]))
print(harry([[1, 2, 3, 4, 5], [6, 7, 8, 9, 10], [11, 12, 13, 14, 15]]))
